package com.gearbrother.sheepwolf.rpc.service.bussiness {
	import com.gearbrother.sheepwolf.rpc.service.*;
	import com.gearbrother.sheepwolf.rpc.channel.RpcSocketChannel;

	/**
	 * Don't modify manually
	 *
	 * @generated by tool
	 * @create on 2014-05-26 15:10:38
	 */
	public class SoilderService extends RpcService {
		public function SoilderService(channel:RpcSocketChannel) {
			super(channel);
		}

		/**
		 * 购买坦克
		 *
		 * @tankConfID 坦克配置ID
		 * @successCallback 成功回调
		 * @errorCallback 失败回调
		 */
		public function buyTank(tankConfID:String, successCallback:Function = null, errorCallback:Function = null):RpcServiceCall {
			return call("soilderService.buyTank", [tankConfID], successCallback, errorCallback);
		}

		/**
		 * 装备坦克
		 *
		 * @tankInstanceID 坦克实例ID
		 * @itemInstanceID 背包实例ID
		 * @successCallback 成功回调
		 * @errorCallback 失败回调
		 */
		public function setEquip(tankInstanceID:String, itemInstanceID:String, successCallback:Function = null, errorCallback:Function = null):RpcServiceCall {
			return call("soilderService.setEquip", [tankInstanceID, itemInstanceID], successCallback, errorCallback);
		}

		/**
		 * 上阵去战斗
		 *
		 * @tankInstanceID 内容
		 * @successCallback 成功回调
		 * @errorCallback 失败回调
		 */
		public function toBattle(tankInstanceID:String, successCallback:Function = null, errorCallback:Function = null):RpcServiceCall {
			return call("soilderService.toBattle", [tankInstanceID], successCallback, errorCallback);
		}

		/**
		 * 设置武器
		 *
		 * @weaponIndex 
		 * @weaponUuid 
		 * @tankUuid 
		 * @successCallback 成功回调
		 * @errorCallback 失败回调
		 */
		public function setWeapon(weaponIndex:int, weaponUuid:String, tankUuid:String, successCallback:Function = null, errorCallback:Function = null):RpcServiceCall {
			return call("soilderService.setWeapon", [weaponIndex, weaponUuid, tankUuid], successCallback, errorCallback);
		}

		/**
		 * 玩家进入接口，新玩家则注册，老玩家则登陆，返回用户信息
		 *
		 * @tankInstanceID 坦克实例ID
		 * @successCallback 成功回调
		 * @errorCallback 失败回调
		 */
		public function sell(tankInstanceID:String, successCallback:Function = null, errorCallback:Function = null):RpcServiceCall {
			return call("soilderService.sell", [tankInstanceID], successCallback, errorCallback);
		}
	}
}
