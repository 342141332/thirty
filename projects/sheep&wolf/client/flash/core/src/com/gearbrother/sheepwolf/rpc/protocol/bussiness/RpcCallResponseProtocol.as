package com.gearbrother.sheepwolf.rpc.protocol.bussiness {
	import com.gearbrother.sheepwolf.rpc.protocol.*;

	/**
	 * Don't modify manually
	 *
	 * @generated by tool
	 * @create on 2014-05-26 15:10:38
	 */
	public class RpcCallResponseProtocol extends RpcProtocol {
		/**
		 * 单次请求标示唯一id
		 */
		static public const UUID:String = "uuid";

		/**
		 * get 单次请求标示唯一id
		 */
		public function get uuid():String {
			return getProperty(UUID);
		}

		/**
		 * set 单次请求标示唯一id
		 */
		public function set uuid(newValue:String):void {
			setProperty(UUID, newValue);
		}

		/**
		 * 是否失败
		 */
		static public const IS_FAILED:String = "isFailed";

		/**
		 * get 是否失败
		 */
		public function get isFailed():Boolean {
			return getProperty(IS_FAILED);
		}

		/**
		 * set 是否失败
		 */
		public function set isFailed(newValue:Boolean):void {
			setProperty(IS_FAILED, newValue);
		}

		/**
		 * 请求结果，按isFailed失败成功返回的信息不同，失败当前内容则是失败原因，成功则是请求返回结果
		 */
		static public const RESULT:String = "result";

		/**
		 * get 请求结果，按isFailed失败成功返回的信息不同，失败当前内容则是失败原因，成功则是请求返回结果
		 */
		public function get result():Object {
			return getProperty(RESULT);
		}

		/**
		 * set 请求结果，按isFailed失败成功返回的信息不同，失败当前内容则是失败原因，成功则是请求返回结果
		 */
		public function set result(newValue:Object):void {
			setProperty(RESULT, newValue);
		}

		/**
		 * 
		 */
		static public const $CLASS:String = "$class";

		/**
		 * get 
		 */
		public function get $class():String {
			return getProperty($CLASS);
		}

		/**
		 * set 
		 */
		public function set $class(newValue:String):void {
			setProperty($CLASS, newValue);
		}

		public function RpcCallResponseProtocol(prototype:Object = null) {
			super(prototype);

			if (prototype) {
				if (prototype[RESULT])
					prototype[RESULT] = prototype2Protocol(prototype[RESULT]);
			}
		}
	}
}
