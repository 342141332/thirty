package com.gearbrother.sheepwolf.rpc.protocol.bussiness {
	import com.gearbrother.sheepwolf.rpc.protocol.*;

	/**
	 * Don't modify manually
	 *
	 * @generated by tool
	 * @create on 2014-05-26 15:10:38
	 */
	public class BattleUserProtocol extends RpcProtocol {
		/**
		 * uuid
		 */
		static public const UUID:String = "uuid";

		/**
		 * get uuid
		 */
		public function get uuid():String {
			return getProperty(UUID);
		}

		/**
		 * set uuid
		 */
		public function set uuid(newValue:String):void {
			setProperty(UUID, newValue);
		}

		/**
		 * 名字
		 */
		static public const NAME:String = "name";

		/**
		 * get 名字
		 */
		public function get name():String {
			return getProperty(NAME);
		}

		/**
		 * set 名字
		 */
		public function set name(newValue:String):void {
			setProperty(NAME, newValue);
		}

		/**
		 * 模型
		 */
		static public const EXPLORER:String = "explorer";

		/**
		 * get 模型
		 */
		public function get explorer():ExplorerProtocol {
			return getProperty(EXPLORER);
		}

		/**
		 * set 模型
		 */
		public function set explorer(newValue:ExplorerProtocol):void {
			setProperty(EXPLORER, newValue);
		}

		/**
		 * 道具
		 */
		static public const TOOLS:String = "tools";

		/**
		 * get 道具
		 */
		public function get tools():Array {
			return getProperty(TOOLS);
		}

		/**
		 * set 道具
		 */
		public function set tools(newValue:Array):void {
			setProperty(TOOLS, newValue);
		}

		/**
		 * 是否该用户控制npc
		 */
		static public const NPCABLE:String = "npcable";

		/**
		 * get 是否该用户控制npc
		 */
		public function get npcable():Boolean {
			return getProperty(NPCABLE);
		}

		/**
		 * set 是否该用户控制npc
		 */
		public function set npcable(newValue:Boolean):void {
			setProperty(NPCABLE, newValue);
		}

		/**
		 * 位置
		 */
		static public const POSITION:String = "position";

		/**
		 * get 位置
		 */
		public function get position():DPointProtocol {
			return getProperty(POSITION);
		}

		/**
		 * set 位置
		 */
		public function set position(newValue:DPointProtocol):void {
			setProperty(POSITION, newValue);
		}

		/**
		 * 移动
		 */
		static public const WALK:String = "walk";

		/**
		 * get 移动
		 */
		public function get walk():BattleWalkProtocol {
			return getProperty(WALK);
		}

		/**
		 * set 移动
		 */
		public function set walk(newValue:BattleWalkProtocol):void {
			setProperty(WALK, newValue);
		}

		/**
		 * true: sleep, false: wolf
		 */
		static public const IS_SLEEP:String = "isSleep";

		/**
		 * get true: sleep, false: wolf
		 */
		public function get isSleep():Boolean {
			return getProperty(IS_SLEEP);
		}

		/**
		 * set true: sleep, false: wolf
		 */
		public function set isSleep(newValue:Boolean):void {
			setProperty(IS_SLEEP, newValue);
		}

		/**
		 * 
		 */
		static public const $CLASS:String = "$class";

		/**
		 * get 
		 */
		public function get $class():String {
			return getProperty($CLASS);
		}

		/**
		 * set 
		 */
		public function set $class(newValue:String):void {
			setProperty($CLASS, newValue);
		}

		public function BattleUserProtocol(prototype:Object = null) {
			super(prototype);

			if (prototype) {
				if (prototype[EXPLORER])
					prototype[EXPLORER] = prototype2Protocol(prototype[EXPLORER]);
				if (prototype[TOOLS])
					prototype[TOOLS] = prototype2Protocol(prototype[TOOLS]);
				if (prototype[POSITION])
					prototype[POSITION] = prototype2Protocol(prototype[POSITION]);
				if (prototype[WALK])
					prototype[WALK] = prototype2Protocol(prototype[WALK]);
			}
		}
	}
}
