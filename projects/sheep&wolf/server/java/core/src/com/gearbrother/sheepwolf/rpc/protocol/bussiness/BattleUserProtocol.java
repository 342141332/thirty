package com.gearbrother.sheepwolf.rpc.protocol.bussiness;

import java.util.*;
import java.lang.reflect.Method;
import java.lang.reflect.InvocationTargetException;
import com.gearbrother.sheepwolf.rpc.protocol.RpcProtocol;

/**
 * Don't modify manually
 *
 * @generated by tool
 * @see com.gearbrother.sheepwolf.pojo.BattleUser
 * @create on 2014-07-19 09:28:05
 */
public class BattleUserProtocol extends RpcProtocol {
	/**
	 *
	 */
	private static final long serialVersionUID = 1L;

	/**
	 * uuid
	 */
	static final String UUID = "uuid";
	/**
	 * get uuid
	 */
	public java.lang.String getUuid() {
		return (String) get(UUID);
	}
	/**
	 * set uuid
	 */
	public void setUuid(java.lang.String value) {
		put(UUID, value);
	}
	public boolean hasUuidProperty() {
		return containsKey(UUID);
	}
	public void removeUuidProperty() {
		remove(UUID);
	}

	/**
	 * 名字
	 */
	static final String NAME = "name";
	/**
	 * get 名字
	 */
	public java.lang.String getName() {
		return (String) get(NAME);
	}
	/**
	 * set 名字
	 */
	public void setName(java.lang.String value) {
		put(NAME, value);
	}
	public boolean hasNameProperty() {
		return containsKey(NAME);
	}
	public void removeNameProperty() {
		remove(NAME);
	}

	/**
	 * 临时速度
	 */
	static final String CHANGED_SPEED = "changedSpeed";
	/**
	 * get 临时速度
	 */
	public double getChangedSpeed() {
		return (Double) get(CHANGED_SPEED);
	}
	/**
	 * set 临时速度
	 */
	public void setChangedSpeed(double value) {
		put(CHANGED_SPEED, value);
	}
	public boolean hasChangedSpeedProperty() {
		return containsKey(CHANGED_SPEED);
	}
	public void removeChangedSpeedProperty() {
		remove(CHANGED_SPEED);
	}

	/**
	 * 临时速度过期时间
	 */
	static final String CHANGED_SPEED_EXPIRED_PERIOD_TIME = "changedSpeedExpiredPeriodTime";
	/**
	 * get 临时速度过期时间
	 */
	public long getChangedSpeedExpiredPeriodTime() {
		return (Long) get(CHANGED_SPEED_EXPIRED_PERIOD_TIME);
	}
	/**
	 * set 临时速度过期时间
	 */
	public void setChangedSpeedExpiredPeriodTime(long value) {
		put(CHANGED_SPEED_EXPIRED_PERIOD_TIME, value);
	}
	public boolean hasChangedSpeedExpiredPeriodTimeProperty() {
		return containsKey(CHANGED_SPEED_EXPIRED_PERIOD_TIME);
	}
	public void removeChangedSpeedExpiredPeriodTimeProperty() {
		remove(CHANGED_SPEED_EXPIRED_PERIOD_TIME);
	}

	/**
	 * 剩余复活数
	 */
	static final String REBORN = "reborn";
	/**
	 * get 剩余复活数
	 */
	public int getReborn() {
		return (Integer) get(REBORN);
	}
	/**
	 * set 剩余复活数
	 */
	public void setReborn(int value) {
		put(REBORN, value);
	}
	public boolean hasRebornProperty() {
		return containsKey(REBORN);
	}
	public void removeRebornProperty() {
		remove(REBORN);
	}

	/**
	 * 被捕获
	 */
	static final String IS_CAPTURED = "isCaptured";
	/**
	 * get 被捕获
	 */
	public boolean getIsCaptured() {
		return (Boolean) get(IS_CAPTURED);
	}
	/**
	 * set 被捕获
	 */
	public void setIsCaptured(boolean value) {
		put(IS_CAPTURED, value);
	}
	public boolean hasIsCapturedProperty() {
		return containsKey(IS_CAPTURED);
	}
	public void removeIsCapturedProperty() {
		remove(IS_CAPTURED);
	}

	/**
	 * 攻击力
	 */
	static final String ORIGINAL_ABILITY_DAMAGE = "originalAbilityDamage";
	/**
	 * get 攻击力
	 */
	public int getOriginalAbilityDamage() {
		return (Integer) get(ORIGINAL_ABILITY_DAMAGE);
	}
	/**
	 * set 攻击力
	 */
	public void setOriginalAbilityDamage(int value) {
		put(ORIGINAL_ABILITY_DAMAGE, value);
	}
	public boolean hasOriginalAbilityDamageProperty() {
		return containsKey(ORIGINAL_ABILITY_DAMAGE);
	}
	public void removeOriginalAbilityDamageProperty() {
		remove(ORIGINAL_ABILITY_DAMAGE);
	}

	/**
	 * 临时攻击力
	 */
	static final String CHANGED_ABILITY_DAMAGE = "changedAbilityDamage";
	/**
	 * get 临时攻击力
	 */
	public int getChangedAbilityDamage() {
		return (Integer) get(CHANGED_ABILITY_DAMAGE);
	}
	/**
	 * set 临时攻击力
	 */
	public void setChangedAbilityDamage(int value) {
		put(CHANGED_ABILITY_DAMAGE, value);
	}
	public boolean hasChangedAbilityDamageProperty() {
		return containsKey(CHANGED_ABILITY_DAMAGE);
	}
	public void removeChangedAbilityDamageProperty() {
		remove(CHANGED_ABILITY_DAMAGE);
	}

	/**
	 * 临时攻击力失效时间
	 */
	static final String CHANGED_ABILITY_DAMAGE_EXPIRED_PERIOD_TIME = "changedAbilityDamageExpiredPeriodTime";
	/**
	 * get 临时攻击力失效时间
	 */
	public long getChangedAbilityDamageExpiredPeriodTime() {
		return (Long) get(CHANGED_ABILITY_DAMAGE_EXPIRED_PERIOD_TIME);
	}
	/**
	 * set 临时攻击力失效时间
	 */
	public void setChangedAbilityDamageExpiredPeriodTime(long value) {
		put(CHANGED_ABILITY_DAMAGE_EXPIRED_PERIOD_TIME, value);
	}
	public boolean hasChangedAbilityDamageExpiredPeriodTimeProperty() {
		return containsKey(CHANGED_ABILITY_DAMAGE_EXPIRED_PERIOD_TIME);
	}
	public void removeChangedAbilityDamageExpiredPeriodTimeProperty() {
		remove(CHANGED_ABILITY_DAMAGE_EXPIRED_PERIOD_TIME);
	}

	/**
	 * 技能
	 */
	static final String SKILLS = "skills";
	/**
	 * get 技能
	 */
	public java.util.Map<java.lang.String, com.gearbrother.sheepwolf.pojo.AnimalSkill> getSkills() {
		return (java.util.Map<java.lang.String, com.gearbrother.sheepwolf.pojo.AnimalSkill>) get(SKILLS);
	}
	/**
	 * set 技能
	 */
	public void setSkills(java.util.Map<java.lang.String, com.gearbrother.sheepwolf.pojo.AnimalSkill> value) {
		put(SKILLS, value);
	}
	public boolean hasSkillsProperty() {
		return containsKey(SKILLS);
	}
	public void removeSkillsProperty() {
		remove(SKILLS);
	}

	/**
	 * buff
	 */
	static final String BUFFS = "buffs";
	/**
	 * get buff
	 */
	public java.util.Map<java.lang.String, com.gearbrother.sheepwolf.pojo.BattleBuff> getBuffs() {
		return (java.util.Map<java.lang.String, com.gearbrother.sheepwolf.pojo.BattleBuff>) get(BUFFS);
	}
	/**
	 * set buff
	 */
	public void setBuffs(java.util.Map<java.lang.String, com.gearbrother.sheepwolf.pojo.BattleBuff> value) {
		put(BUFFS, value);
	}
	public boolean hasBuffsProperty() {
		return containsKey(BUFFS);
	}
	public void removeBuffsProperty() {
		remove(BUFFS);
	}

	/**
	 * 是否该用户控制npc
	 */
	static final String NPCABLE = "npcable";
	/**
	 * get 是否该用户控制npc
	 */
	public boolean getNpcable() {
		return (Boolean) get(NPCABLE);
	}
	/**
	 * set 是否该用户控制npc
	 */
	public void setNpcable(boolean value) {
		put(NPCABLE, value);
	}
	public boolean hasNpcableProperty() {
		return containsKey(NPCABLE);
	}
	public void removeNpcableProperty() {
		remove(NPCABLE);
	}

	/**
	 * 当前行为
	 */
	static final String CURRENT_ACTION = "currentAction";
	/**
	 * get 当前行为
	 */
	public Object getCurrentAction() {
		return (Object) get(CURRENT_ACTION);
	}
	/**
	 * set 当前行为
	 */
	public void setCurrentAction(Object value) {
		put(CURRENT_ACTION, value);
	}
	public boolean hasCurrentActionProperty() {
		return containsKey(CURRENT_ACTION);
	}
	public void removeCurrentActionProperty() {
		remove(CURRENT_ACTION);
	}

	/**
	 * true: sheep, false: wolf
	 */
	static final String IS_SHEEP = "isSheep";
	/**
	 * get true: sheep, false: wolf
	 */
	public boolean getIsSheep() {
		return (Boolean) get(IS_SHEEP);
	}
	/**
	 * set true: sheep, false: wolf
	 */
	public void setIsSheep(boolean value) {
		put(IS_SHEEP, value);
	}
	public boolean hasIsSheepProperty() {
		return containsKey(IS_SHEEP);
	}
	public void removeIsSheepProperty() {
		remove(IS_SHEEP);
	}

	/**
	 * 当前方向
	 */
	static final String DIRECTION = "direction";
	/**
	 * get 当前方向
	 */
	public int getDirection() {
		return (Integer) get(DIRECTION);
	}
	/**
	 * set 当前方向
	 */
	public void setDirection(int value) {
		put(DIRECTION, value);
	}
	public boolean hasDirectionProperty() {
		return containsKey(DIRECTION);
	}
	public void removeDirectionProperty() {
		remove(DIRECTION);
	}

	/**
	 * 
	 */
	static final String $CLASS = "$class";
	/**
	 * get 
	 */
	public java.lang.String get$class() {
		return (String) get($CLASS);
	}
	/**
	 * set 
	 */
	public void set$class(java.lang.String value) {
		put($CLASS, value);
	}
	public boolean has$classProperty() {
		return containsKey($CLASS);
	}
	public void remove$classProperty() {
		remove($CLASS);
	}

	/**
	 * 资源
	 */
	static final String COIN = "coin";
	/**
	 * get 资源
	 */
	public int getCoin() {
		return (Integer) get(COIN);
	}
	/**
	 * set 资源
	 */
	public void setCoin(int value) {
		put(COIN, value);
	}
	public boolean hasCoinProperty() {
		return containsKey(COIN);
	}
	public void removeCoinProperty() {
		remove(COIN);
	}

	/**
	 * 经验
	 */
	static final String EXP = "exp";
	/**
	 * get 经验
	 */
	public int getExp() {
		return (Integer) get(EXP);
	}
	/**
	 * set 经验
	 */
	public void setExp(int value) {
		put(EXP, value);
	}
	public boolean hasExpProperty() {
		return containsKey(EXP);
	}
	public void removeExpProperty() {
		remove(EXP);
	}

	/**
	 * 下一等经验
	 */
	static final String EXP_NEXT_LEVEL = "expNextLevel";
	/**
	 * get 下一等经验
	 */
	public int getExpNextLevel() {
		return (Integer) get(EXP_NEXT_LEVEL);
	}
	/**
	 * set 下一等经验
	 */
	public void setExpNextLevel(int value) {
		put(EXP_NEXT_LEVEL, value);
	}
	public boolean hasExpNextLevelProperty() {
		return containsKey(EXP_NEXT_LEVEL);
	}
	public void removeExpNextLevelProperty() {
		remove(EXP_NEXT_LEVEL);
	}

	/**
	 * 上一个经验值
	 */
	static final String EXP_PRE_LEVEL = "expPreLevel";
	/**
	 * get 上一个经验值
	 */
	public int getExpPreLevel() {
		return (Integer) get(EXP_PRE_LEVEL);
	}
	/**
	 * set 上一个经验值
	 */
	public void setExpPreLevel(int value) {
		put(EXP_PRE_LEVEL, value);
	}
	public boolean hasExpPreLevelProperty() {
		return containsKey(EXP_PRE_LEVEL);
	}
	public void removeExpPreLevelProperty() {
		remove(EXP_PRE_LEVEL);
	}

	/**
	 * 当前血量
	 */
	static final String HP = "hp";
	/**
	 * get 当前血量
	 */
	public int getHp() {
		return (Integer) get(HP);
	}
	/**
	 * set 当前血量
	 */
	public void setHp(int value) {
		put(HP, value);
	}
	public boolean hasHpProperty() {
		return containsKey(HP);
	}
	public void removeHpProperty() {
		remove(HP);
	}

	/**
	 * 等级
	 */
	static final String LEVEL = "level";
	/**
	 * get 等级
	 */
	public int getLevel() {
		return (Integer) get(LEVEL);
	}
	/**
	 * set 等级
	 */
	public void setLevel(int value) {
		put(LEVEL, value);
	}
	public boolean hasLevelProperty() {
		return containsKey(LEVEL);
	}
	public void removeLevelProperty() {
		remove(LEVEL);
	}

	/**
	 * 满级血量
	 */
	static final String MAX_HP = "maxHp";
	/**
	 * get 满级血量
	 */
	public int getMaxHp() {
		return (Integer) get(MAX_HP);
	}
	/**
	 * set 满级血量
	 */
	public void setMaxHp(int value) {
		put(MAX_HP, value);
	}
	public boolean hasMaxHpProperty() {
		return containsKey(MAX_HP);
	}
	public void removeMaxHpProperty() {
		remove(MAX_HP);
	}

	/**
	 * 移动速度
	 */
	static final String ORGINAL_SPEED = "orginalSpeed";
	/**
	 * get 移动速度
	 */
	public double getOrginalSpeed() {
		return (Double) get(ORGINAL_SPEED);
	}
	/**
	 * set 移动速度
	 */
	public void setOrginalSpeed(double value) {
		put(ORGINAL_SPEED, value);
	}
	public boolean hasOrginalSpeedProperty() {
		return containsKey(ORGINAL_SPEED);
	}
	public void removeOrginalSpeedProperty() {
		remove(ORGINAL_SPEED);
	}

	public BattleUserProtocol() {
		super();

		put("$class", "com.gearbrother.sheepwolf.pojo.BattleUser");
	}

	/**
	 * null
		 *
		 * @bean null
	 */
	public BattleUserProtocol parseBean(com.gearbrother.sheepwolf.pojo.BattleUser bean) throws InstantiationException, IllegalAccessException, SecurityException, NoSuchMethodException, IllegalArgumentException, InvocationTargetException {
		setUuid(bean.uuid);
		setName(bean.name);
		setChangedSpeed(bean.changedSpeed);
		setChangedSpeedExpiredPeriodTime(bean.changedSpeedExpiredPeriodTime);
		setReborn(bean.reborn);
		setIsCaptured(bean.isCaptured);
		setOriginalAbilityDamage(bean.originalAbilityDamage);
		setChangedAbilityDamage(bean.changedAbilityDamage);
		setChangedAbilityDamageExpiredPeriodTime(bean.changedAbilityDamageExpiredPeriodTime);
		setSkills(bean.skills);
		setBuffs(bean.buffs);
		setNpcable(bean.npcable);
		setCurrentAction(bean.currentAction);
		setIsSheep(bean.isSheep);
		setDirection(bean.direction);
		set$class(bean.$class);
		setCoin(bean.getCoin());
		setExp(bean.getExp());
		setExpNextLevel(bean.getExpNextLevel());
		setExpPreLevel(bean.getExpPreLevel());
		setHp(bean.getHp());
		setLevel(bean.getLevel());
		setMaxHp(bean.getMaxHp());
		setOrginalSpeed(bean.getOrginalSpeed());
		return this;
	}

	/**
	 * 清除所有属性，导出JSON时将不会导出任何属性，用来减少消息大小
	 */
	public void removeAllProperties() {
		removeUuidProperty();
		removeNameProperty();
		removeChangedSpeedProperty();
		removeChangedSpeedExpiredPeriodTimeProperty();
		removeRebornProperty();
		removeIsCapturedProperty();
		removeOriginalAbilityDamageProperty();
		removeChangedAbilityDamageProperty();
		removeChangedAbilityDamageExpiredPeriodTimeProperty();
		removeSkillsProperty();
		removeBuffsProperty();
		removeNpcableProperty();
		removeCurrentActionProperty();
		removeIsSheepProperty();
		removeDirectionProperty();
		remove$classProperty();
		removeCoinProperty();
		removeExpProperty();
		removeExpNextLevelProperty();
		removeExpPreLevelProperty();
		removeHpProperty();
		removeLevelProperty();
		removeMaxHpProperty();
		removeOrginalSpeedProperty();
	}
}
